/*
  Future<List> getData() async {
    // Get docs from collection reference
    QuerySnapshot querySnapshot = await calendrier.doc(documentID).collection("evenements").get();

    // Get data from docs and convert map to List
    final allData = querySnapshot.docs.map((doc) => doc.data()).toList();
    return allData;
  }

  Widget eventSection(){
    if (_listEvents == true){
      return FutureBuilder<DocumentSnapshot>(
              //Fetching data from the documentId specified of the student
                future: calendrier.doc(documentID).get(),
                builder:
                    (BuildContext context, AsyncSnapshot<DocumentSnapshot> snapshot) {


                  //Error Handling conditions
                  if (snapshot.hasError) {
                    return Text("Something went wrong -- ${snapshot.error.toString()}");
                  }

                  if (snapshot.hasData && !snapshot.data!.exists) {
                    return Text("Document does not exist");
                  }

                  //Data is output to the user
                  if (snapshot.connectionState == ConnectionState.done) {
                    Map<String, dynamic> data = snapshot.data!.data() as Map<String, dynamic>;
                    //return Text("Full Name: ${data['valeurTest']}");
                    //getData().then((value) => dataDay = value);
                    return Container(
                        child:
                          //Text("Date:"+data['valeurTest']),
                        FutureBuilder(
                            future: getData()/*.then((value) => dataDay = value)*/,
                            builder: (BuildContext context, AsyncSnapshot<List> snapshot){
                              //Map<String, dynamic> data = snapshot.data!.data() as Map<String, dynamic>;
                              if (snapshot.connectionState == ConnectionState.done) {
                                dataDay = snapshot.data!;
                                // TODO Allow scrolling here
                                return SingleChildScrollView(
                                    child: Column(
                                      children: dataDay.map((obj) =>
                                          Container(
                                            child: Text(
                                              obj['Titre'],
                                              style: TextStyle(color: colors['mainColor']),
                                            ),
                                            // height: 93.2,
                                            //height: double.minPositive,
                                          )).toList(),
                                  )
                                );
                              }
                              else{
                                return Text('Waiting for data...');
                              }
                            },
                          )
                    );
                    //return ListEvents();
                  }

                  return Text("loading");
                }
            );
    } else {
      return Container();
    }
  }
  */

  /**
   * AppBar(
      title: Text('test'),
      backgroundColor: colors['mainColor'],
      ),
   */